
function route(app) {
    

    //*******************************************************************************************************************************************
    //*******************************************************************************************************************************************
    // СТАТИЧЕСКИЕ СТРАНИЦЫ 

    // подключаем обработчик get запроса
    app.route('/').all((req, res, next) => { // строгое соответствие пути '/' (остальное выдаст 404 Not Found)
        //res.send('Hello World!')
        res.render('index.hbs', { title: "Панель администрирования", path: "app" }); /* main_page */
    })

    //*******************************************************************************************************************************************
    //*******************************************************************************************************************************************
    // ЗАПРОСЫ ПОЛУЧЕНИЯ ДАННЫХ API-ДОСТУП


    app.route('/api').post(async(req, res, next)=>{
        const { apiRouter } = require("./api");
        await apiRouter(req, res);
    });



    // req (запрос) и res (ответ) являются теми же объектами, которые предоставляет Node, поэтому можно вызвать req.pipe(), 
    // req.on('data', callback) и выполнить любые другие действия, не требующие участия Express.



    //*******************************************************************************************************************************************
    // ПРИМЕРЫ МАРШРУТИЗАЦИИ

    /*
    // Обработка GET запроса (/), на домашней странице приложения:
    app.get('/', function (req, res) {
        res.send('Hello World!');
    });

    // Ответ на запрос POST в корневом маршруте (/), на домашней странице приложения:
    app.post('/', function (req, res) {
        res.send('Got a POST request');
    });

    // Ответ на запрос PUT, адресованный маршруту /user:
    app.put('/user', function (req, res) {
        res.send('Got a PUT request at /user');
    });

    // Ответ на запрос DELETE, адресованный маршруту /user:
    app.delete('/user', function (req, res) {
        res.send('Got a DELETE request at /user');
    });
    */
}

module.exports = { route } 

